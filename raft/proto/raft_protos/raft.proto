syntax = "proto3";

package raft_protos;

option cc_generic_services = false;
option java_generic_services = false;
option py_generic_services = false;

// The Raft service is used for communication between Raft replicas.
service Raft {
  // AppendEntries is invoked by the leader to replica log entries and
  // as a heartbeat.
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesReply);
  // RequestVote is a request issued by a candidate to gather votes.
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteReply);
}

// The request message for the AppendEntries RPC.
message AppendEntriesRequest {
  // The current term.
  int64 term = 1;
  // The leader's ID.
  string leader_id = 2;
  // The index of the log entry immediately preceding the new ones.
  int64 prev_log_index = 3;
  // The term of the log entry at prev_log_index. This is used to ensure that
  // the follower's log is consistent with the leader's log.
  int64 prev_log_term = 4;
  // The log entries to store. This may be empty for a heartbeat.
  repeated LogEntry entries = 5;
  // The leader's commit index.
  int64 leader_commit = 6;
}

// LogEntry represents a single log entry in the Raft log.
message LogEntry {
  // The term of the log entry.
  int64 term = 1;
  // The data contained in the log entry.
  bytes data = 2;
}

// The reply message for the AppendEntries RPC.
message AppendEntriesReply {
  // The current term.
  int64 term = 1;
  // True if follower contained entry matching prev_log_index and prev_log_term.
  bool success = 2;
}

// The request message for the RequestVote RPC.
message RequestVoteRequest {
  // The current term.
  int64 term = 1;
  // The candidate's ID.
  string candidate_id = 2;
  // The index of the candidate's last log entry.
  int64 last_log_index = 3;
  // The term of the candidate's last log entry.
  int64 last_log_term = 4;
}

// The reply message for the RequestVote RPC.
message RequestVoteReply {
  // The current term.
  int64 term = 1;
  // True if the candidate received a vote.
  bool vote_granted = 2;
}
